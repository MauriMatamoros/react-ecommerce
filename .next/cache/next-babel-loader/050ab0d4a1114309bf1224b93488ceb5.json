{"ast":null,"code":"import mongoose from 'mongoose';\nconst connection = {};\n\nconst connectDB = async () => {\n  if (connection.isConnected) {\n    console.log('Using existing connection');\n    return;\n  }\n\n  const db = await mongoose.connect(process.env.MONGO_SRV, {\n    useCreateIndex: true,\n    useFindAndModify: false,\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  console.log('DB Connected'); //Serverless architecture\n\n  connection.isConnected = db.connections[0].readyState;\n};\n\nexport default connectDB;","map":{"version":3,"sources":["/Users/mmatamoros/Documents/react-reserve/utils/connectDb.js"],"names":["mongoose","connection","connectDB","isConnected","console","log","db","connect","process","env","MONGO_SRV","useCreateIndex","useFindAndModify","useNewUrlParser","useUnifiedTopology","connections","readyState"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,MAAMC,UAAU,GAAG,EAAnB;;AAEA,MAAMC,SAAS,GAAG,YAAY;AAC7B,MAAID,UAAU,CAACE,WAAf,EAA4B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA;AACA;;AACD,QAAMC,EAAE,GAAG,MAAMN,QAAQ,CAACO,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AACxDC,IAAAA,cAAc,EAAE,IADwC;AAExDC,IAAAA,gBAAgB,EAAE,KAFsC;AAGxDC,IAAAA,eAAe,EAAE,IAHuC;AAIxDC,IAAAA,kBAAkB,EAAE;AAJoC,GAAxC,CAAjB;AAMAV,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAX6B,CAY7B;;AACAJ,EAAAA,UAAU,CAACE,WAAX,GAAyBG,EAAE,CAACS,WAAH,CAAe,CAAf,EAAkBC,UAA3C;AACA,CAdD;;AAgBA,eAAed,SAAf","sourcesContent":["import mongoose from 'mongoose'\nconst connection = {}\n\nconst connectDB = async () => {\n\tif (connection.isConnected) {\n\t\tconsole.log('Using existing connection')\n\t\treturn\n\t}\n\tconst db = await mongoose.connect(process.env.MONGO_SRV, {\n\t\tuseCreateIndex: true,\n\t\tuseFindAndModify: false,\n\t\tuseNewUrlParser: true,\n\t\tuseUnifiedTopology: true\n\t})\n\tconsole.log('DB Connected')\n\t//Serverless architecture\n\tconnection.isConnected = db.connections[0].readyState\n}\n\nexport default connectDB\n"]},"metadata":{},"sourceType":"module"}